<?xml version="1.0" encoding="UTF-8"?>
<!-- configuration 根元素
	debug：是否打印 logback 内部日志信息，默认为 false
	scan：配置文件发生改变，是否会被重新加载，默认为 true
	scanPeriod：监测配置文件修改的时间间隔，当 scan=true 时生效，默认为 1 分钟，scanPeriod="30 seconds" 代表每 30 秒检测一次
-->
<configuration>
	<!-- 日志文件的存储地址 -->
	<property name="LOG_HOME" value="target/logs" />
	<!-- 编码 -->
	<property name="ENCODING" value="UTF-8" />
	<!-- 日志格式-普通 -->
	<property name="LOG_PATTERN_NORMAL" value="yyyy-MM-dd HH:mm:ss.SSS %5p ${PID} [%15.15t] [%X{traceId},%X{spanId}] %-40.40logger{39} %4.4L: %m%n" />
	<!-- 日志格式-彩色
		%d：日期
		%p：日志级别（5=指定最大宽度、highlight=根据日志级别高亮显示）
		%t：线程名称（15.15=等宽）
		${PID}：进程id
		%X{traceId}：链路id
		%X{spanId}：链路单元id
		%logger：包名类名（30.30=等宽、{29}=从右边指定精度，即从右往左取29长度）
		%L：行号（4.4=等宽）
		%m：应用日志
		%n: 换行
		color：%blue(蓝)、%cyan(青)、%faint(淡白)、%green(绿)、%magenta(品红)、%red(红)、%yellow(黄)、%boldXxx(对应颜色并加粗)
		更多内置信息查看 {@link ch.qos.logback.classic.PatternLayout#defaultConverterMap} 类
	-->
	<property name="LOG_PATTERN_COLOR" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%5p) %magenta(${PID}) %blue([%15.15t]) %boldGreen([%X{traceId},%X{spanId}]) %cyan(%-30.30logger{30}) %yellow(%4.4L): %m%n"/>

	<!-- 读取 springboot 配置 -->
	<springProperty name="APPLICATION_NAME" scope="context" source="spring.application.name" />

	<!-- 控制台输出 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>${ENCODING}</charset>
			<pattern>${LOG_PATTERN_COLOR}</pattern>
		</encoder>
	</appender>

	<!-- 文件输出 -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 日志文件大小、日期滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 日志文件输出的文件名 -->
			<fileNamePattern>${LOG_HOME}/${APPLICATION_NAME}.%d{yyyy-MM-dd_HH}.%i.log</fileNamePattern>
			<!-- 日志文件保留天数 -->
			<maxHistory>30</maxHistory>
			<!-- 单个日志文件允许大小 -->
			<maxFileSize>100MB</maxFileSize>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>${ENCODING}</charset>
			<pattern>${LOG_PATTERN_NORMAL}</pattern>
		</encoder>
	</appender>

	<!-- 错误日志文件输出 -->
	<appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 阈值过滤器 -->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<!-- 仅输出错误日志 -->
			<level>ERROR</level>
		</filter>
		<!-- 日志文件大小、日期滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 日志文件输出的文件名 -->
			<fileNamePattern>${LOG_HOME}/${APPLICATION_NAME}.error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<!-- 日志文件保留天数 -->
			<maxHistory>30</maxHistory>
			<!-- 单个日志文件允许大小 -->
			<maxFileSize>50MB</maxFileSize>
			<!-- 所有日志文件最大大小 -->
			<totalSizeCap>200MB</totalSizeCap>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<charset>${ENCODING}</charset>
			<pattern>${LOG_PATTERN_NORMAL}</pattern>
		</encoder>
	</appender>

	<!-- 指定包的日志输出级别 -->
	<!-- 打印SQL日志 -->
	<logger name="com.example.demo.dao.mysql.mapper" level="DEBUG" />

	<!-- 本地 -->
	<springProfile name="default | dev">
		<root level="INFO">
			<appender-ref ref="CONSOLE" />
		</root>
	</springProfile>

	<!-- 其他环境 -->
	<springProfile name="test | prod">
		<root level="INFO">
			<appender-ref ref="CONSOLE" />
			<appender-ref ref="FILE" />
			<appender-ref ref="ERROR_FILE" />
		</root>
	</springProfile>

</configuration>